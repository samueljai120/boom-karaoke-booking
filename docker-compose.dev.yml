version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: boom-booking-postgres
    environment:
      POSTGRES_DB: boom_booking
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/init-postgres.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - boom-booking-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d boom_booking"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: boom-booking-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - boom-booking-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PgAdmin (Database Management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: boom-booking-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@boomkaraoke.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - boom-booking-network
    depends_on:
      postgres:
        condition: service_healthy

  # Redis Commander (Redis Management)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: boom-booking-redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    networks:
      - boom-booking-network
    depends_on:
      redis:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  boom-booking-network:
    driver: bridge


